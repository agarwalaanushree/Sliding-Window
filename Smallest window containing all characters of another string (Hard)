class Solution {
  public:
    // Function to find the smallest window in the string s1 consisting
    // of all the characters of string s2.
    string smallestWindow(string &s1, string &s2) {
        // Your code here
        unordered_map<char,int> mp;
        for(int i=0;i<s2.size();i++){
            mp[s2[i]]++;
        }
        int dis_cnt=mp.size();
        
        int st=0;
        int count=s2.size();
        int mnSize=INT_MAX;
        int mnst=0;
        for(int end=0;end<s1.size();end++)
        {
            if(mp[s1[end]]-->0){
                //mp[s1[end]]--;
                count--;
            }
            
            while(count==0)
            {
                if(mnSize>end-st+1)
                {
                    mnSize=end-st+1;
                    mnst=st;
                }
                mp[s1[st]]++;
                if(mp[s1[st]]>0){
                    count++;
                }
                st++;
            }
        }
        if(mnSize==INT_MAX)
        return "";
        else
        return s1.substr(mnst,mnSize);
    }
};
